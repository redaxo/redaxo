{
    "name": "redaxo/source",
    "type": "library",
    "description": "REDAXO CMS source repository (for static analysis)",
    "license": "MIT",
    "require": {
        "php": ">=7.3"
    },
    "require-dev": {
        "friendsofphp/php-cs-fixer": "2.18.2",
        "friendsofredaxo/linter": "1.3.0",
        "j13k/yaml-lint": "^1.1@dev",
        "phpstan/extension-installer": "1.1.0",
        "phpstan/phpstan": "0.12.76",
        "phpstan/phpstan-deprecation-rules": "0.12.6",
        "phpstan/phpstan-phpunit": "0.12.17",
        "phpstan/phpstan-symfony": "0.12.18",
        "phpunit/phpunit": "^9.3",
        "psalm/plugin-phpunit": "0.15.1",
        "psalm/plugin-symfony": "2.1.2",
        "vimeo/psalm": "4.5.2"
    },
    "replace": {
        "erusev/parsedown": "1.7.4",
        "erusev/parsedown-extra": "0.8.1",
        "filp/whoops": "2.9.2",
        "itsgoingd/clockwork": "v5.0.6",
        "phpmailer/phpmailer": "v6.2.0",
        "psr/container": "1.0.0",
        "psr/http-message": "1.0.1",
        "psr/log": "1.1.3",
        "ramsey/collection": "1.1.3",
        "ramsey/http-range": "1.0.0",
        "scssphp/scssphp": "v1.4.1",
        "splitbrain/php-archive": "1.2.0",
        "symfony/console": "v5.2.3",
        "symfony/deprecation-contracts": "v2.2.0",
        "symfony/http-foundation": "v5.2.3",
        "symfony/polyfill-ctype": "v1.22.0",
        "symfony/polyfill-intl-grapheme": "v1.22.0",
        "symfony/polyfill-intl-normalizer": "v1.22.0",
        "symfony/polyfill-mbstring": "v1.22.0",
        "symfony/polyfill-php70": "*",
        "symfony/polyfill-php72": "*",
        "symfony/polyfill-php73": "*",
        "symfony/polyfill-php80": "v1.22.0",
        "symfony/service-contracts": "v2.2.0",
        "symfony/string": "v5.2.3",
        "symfony/var-dumper": "v5.2.3",
        "symfony/yaml": "v5.2.3",
        "voku/anti-xss": "4.1.31",
        "voku/portable-ascii": "1.5.6",
        "voku/portable-utf8": "5.4.51"
    },
    "autoload": {
        "classmap": [
            "redaxo/src/addons/backup/lib/",
            "redaxo/src/addons/backup/vendor/",
            "redaxo/src/addons/be_style/lib/",
            "redaxo/src/addons/be_style/vendor/scssphp/",
            "redaxo/src/addons/cronjob/lib/",
            "redaxo/src/addons/cronjob/plugins/article_status/lib/",
            "redaxo/src/addons/cronjob/plugins/optimize_tables/lib/",
            "redaxo/src/addons/debug/lib/",
            "redaxo/src/addons/debug/vendor/",
            "redaxo/src/addons/install/lib/",
            "redaxo/src/addons/media_manager/lib/",
            "redaxo/src/addons/mediapool/lib/",
            "redaxo/src/addons/metainfo/lib/",
            "redaxo/src/addons/phpmailer/lib/",
            "redaxo/src/addons/phpmailer/vendor/",
            "redaxo/src/addons/structure/lib/",
            "redaxo/src/addons/structure/plugins/content/lib/",
            "redaxo/src/addons/structure/plugins/history/lib/",
            "redaxo/src/addons/structure/plugins/version/lib/",
            "redaxo/src/addons/users/lib/",
            "redaxo/src/core/lib/"
        ],
        "files": [
            "redaxo/src/addons/mediapool/functions/function_rex_mediapool.php",
            "redaxo/src/addons/metainfo/extensions/extension_cleanup.php",
            "redaxo/src/addons/metainfo/functions/function_metainfo.php",
            "redaxo/src/addons/structure/functions/function_rex_url.php",
            "redaxo/src/core/functions/function_rex_escape.php",
            "redaxo/src/core/functions/function_rex_globals.php",
            "redaxo/src/core/functions/function_rex_other.php",
            "redaxo/src/core/vendor/autoload.php"
        ]
    },
    "autoload-dev": {
        "classmap": [
            "redaxo/src/addons/media_manager/tests/",
            "redaxo/src/addons/mediapool/tests/",
            "redaxo/src/addons/structure/tests/",
            "redaxo/src/addons/structure/plugins/content/tests/",
            "redaxo/src/core/tests/"
        ]
    },
    "bin": [
        "redaxo/bin/console"
    ],
    "scripts": {
        "clone-addon": ".tools/bin/clone-addon",
        "refresh": "bash .tools/bin/refresh",
        "release": ".tools/bin/release",
        "update-all": "bash .tools/bin/update-all",
        "cs": "php-cs-fixer fix -v --ansi",
        "phpunit": "phpunit --colors=always",
        "phpstan": "phpstan analyse --ansi",
        "phpstan-baseline": "phpstan analyse --generate-baseline .tools/phpstan/baseline.neon",
        "psalm": "psalm --use-baseline=.tools/psalm/baseline.xml",
        "psalm-baseline": "psalm --set-baseline=.tools/psalm/baseline.xml",
        "taint": "psalm --use-baseline=.tools/psalm/baseline-taint.xml --taint-analysis --no-cache --threads=1",
        "taint-baseline": "psalm --set-baseline=.tools/psalm/baseline-taint.xml --taint-analysis --no-cache --threads=1 || git checkout -- psalm.xml",
        "sa": [
            "@phpstan",
            "@psalm"
        ],
        "check": [
            "@cs",
            "@sa",
            "@phpunit",
            "@taint"
        ],
        "rector": [
            "rector process --config=.tools/rector/rector.php"
        ]
    },
    "scripts-descriptions": {
        "clone-addon": "Clone given addon (by user/repo or github url) into addon directory",
        "refresh": "Refresh local instance (refresh core assets, re-install system addons, clear cache, update dev tools)",
        "release": "Create release zip for given version number",
        "update-all": "Update all vendor libs (php and js) in core, system addons and dev tools",
        "cs": "Fix code style via php-cs-fixer",
        "phpunit": "Run phpunit",
        "phpstan": "Run static analysis via phpstan",
        "phpstan-baseline": "Regenerate the phpstan baseline",
        "psalm": "Run static analysis via psalm",
        "psalm-baseline": "Regenerate the psalm static analysis baseline",
        "taint": "Run taint analysis via psalm",
        "taint-baseline": "Regenerate the psalm taint  analysis baseline",
        "sa": "Run all static analyses (psalm and phpstan)",
        "check": "Check all (code style, static analysis, unit tests)"
    },
    "config": {
        "optimize-autoloader": true,
        "sort-packages": true
    }
}
